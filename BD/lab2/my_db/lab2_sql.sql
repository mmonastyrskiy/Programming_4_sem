-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS "C21-703-7"."Room"
(
    id integer,
    name character varying(50) NOT NULL,
    space numeric(7,2) NOT NULL,
    space_left numeric(7,2) NOT NULL,
    min_humidity numeric(8,2) NOT NULL,
    max_humidity numeric(8,2) NOT NULL,
    min_temp numeric(5,2) NOT NULL,
    max_temp numeric(5,2) NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT uni_room_name UNIQUE (name),
	CONSTRAINT positive_volume_left_room CHECK(space_left >0),
	CONSTRAINT positive_volume_room CHECK(space >0),
	CONSTRAINT volume_left_le_volume CHECK(space_left <= space),
	CONSTRAINT hu_max_in_interval CHECK (max_humidity <= 100 and max_humidity >= 0),
	CONSTRAINT hu_min_in_interval CHECK (min_humidity <= 100 and min_humidity >= 0)
);

CREATE TABLE IF NOT EXISTS "C21-703-7"."Shelf"
(
    shelf_id integer,
    room_id integer NOT NULL,
    max_spaces integer NOT NULL,
    spaces_left integer NOT NULL,
    slot_w numeric(7,0) NOT NULL,
    slot_h numeric(7,0) NOT NULL,
    slot_l numeric(7,0) NOT NULL,
    max_weight numeric(7,2) NOT NULL,
    weight_left numeric(7,2) NOT NULL,
    PRIMARY KEY (shelf_id),
	CONSTRAINT positive_size_slot_w_shelf CHECK(slot_w >0),
	CONSTRAINT positive_size_slot_h_shelf CHECK(slot_h >0),
	CONSTRAINT positive_size_slot_l_shelf CHECK(slot_l >0),
	CONSTRAINT positive_weight_shelf CHECK(max_weight >0),
	CONSTRAINT positive_weight_left_shelf CHECK(weight_left >0),
	CONSTRAINT wight_left_le_weight CHECK(weight_left <= max_weight)
	
	
);

CREATE TABLE IF NOT EXISTS "C21-703-7"."Client"
(
    client_id integer,
    name character varying(255) NOT NULL,
    requisites text NOT NULL,
    PRIMARY KEY (client_id),
    CONSTRAINT uni_client_requisites UNIQUE (requisites, name)
);

CREATE TABLE IF NOT EXISTS "C21-703-7"."Contract"
(
    contract_id integer,
    expiration_date date NOT NULL,
    signing_date date NOT NULL,
    client_id integer NOT NULL,
    PRIMARY KEY (contract_id),
	CONSTRAINT signed_not_future CHECK(signing_date <= now())
);

CREATE TABLE IF NOT EXISTS "C21-703-7".product
(
    product_id integer,
    width numeric(7,0) NOT NULL,
    height numeric(7,0) NOT NULL,
    length numeric(7,0) NOT NULL,
    unpacking_date date NOT NULL,
    contract_id integer NOT NULL,
    max_humid numeric(8,2) NOT NULL,
    min_humid numeric(8,2) NOT NULL,
    max_temp numeric(5,2) NOT NULL,
    min_temp numeric(5,2) NOT NULL,
    shelf_id integer NOT NULL,
    slot_id integer NOT NULL,
    weight numeric(7,2) NOT NULL,
    PRIMARY KEY (product_id),
    CONSTRAINT uni_place UNIQUE (shelf_id, slot_id),
	CONSTRAINT hu_max_in_interval_product CHECK (max_humid <= 100 and max_humid >= 0),
	CONSTRAINT hu_min_in_interval_product CHECK (min_humid <= 100 and min_humid >= 0),
	CONSTRAINT size_pos_product_width CHECK (width > 0),
	CONSTRAINT size_pos_product_height CHECK (height > 0),
	CONSTRAINT size_pos_product_length CHECK (length > 0),
	CONSTRAINT pos_weight_product CHECK(weight > 0),
	CONSTRAINT up_date_not_future CHECK (unpacking_date < now())
	
);


ALTER TABLE IF EXISTS "C21-703-7"."Shelf"
    ADD FOREIGN KEY (room_id)
    REFERENCES "C21-703-7"."Room" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "C21-703-7"."Contract"
    ADD FOREIGN KEY (client_id)
    REFERENCES "C21-703-7"."Client" (client_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "C21-703-7"."product"
    ADD FOREIGN KEY (shelf_id)
    REFERENCES "C21-703-7"."Shelf" (shelf_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "C21-703-7"."product"
    ADD FOREIGN KEY (contract_id)
    REFERENCES "C21-703-7"."Contract" (contract_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;
